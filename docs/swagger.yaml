openapi: '3.0.0'

info:
  version: '0.0.1'
  title: 'github-openid-serverless'

servers:
  - url: 'http://localhost:3000'

tags:
  - name: openid
    description: Github Openid wrapper

paths:
  /authorize:
    get:
      summary: Authorizer route for github login
      description: A wrapper openid for github login authorizer
      tags:
        - openid
      parameters:
        - name: "client_id"
          in: "query"
          required: true
          description: "paramters for github oauth app"
          schema:
            type: string
        - name: "scope"
          in: "query"
          required: true
          description: "paramters for github oauth app"
          schema:
            type: string
        - name: "state"
          in: "query"
          required: true
          description: "paramters for github oauth app"
          schema:
            type: string
        - name: "response_type"
          in: "query"
          required: true
          description: "paramters for github oauth app"
          schema:
            type: string
      responses:
        '302': 
          description: Redirect for github authorizer page
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Server internal error.
  /token:
    post:
      summary: Token route for github login
      description: A wrapper openid for github login
      tags:
        - openid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenIdTokenRequest"
      responses:
        '200': 
          description: Response with access tokens
    get:
      summary: Token route for github login
      description: A wrapper openid for github login
      tags:
        - openid
      parameters:
        - name: "code"
          in: "query"
          required: true
          schema:
            type: string
        - name: "state"
          in: "query"
          required: true
      responses:
        '200': 
          description: Response with access tokens
  /userinfo:
    post:
      summary: User info route for github login
      description: A wrapper openid for github login
      tags:
        - openid
      responses:
        '200': 
          description: Response with user data
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Server internal error.
    get:
      summary: User info route for github login
      description: A wrapper openid for github login
      tags:
        - openid
      responses:
        '200': 
          description: Response with user data
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Server internal error.
  /.well-known/jwks.json:
    get:
      summary: Jwks route for github login
      description: A wrapper openid for github login
      tags:
        - openid
      responses:
        '200': 
          description: Responde with certificate
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Server internal error.
  /.well-known/openid-configuration:
    get:
      summary: Openid configuration route for github login
      description: A wrapper openid for github login
      tags:
        - openid
      responses:
        '200': 
          description: Responde with openid configuration
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Server internal error.
components:
  schemas:
    Authentication:
      type: object
      properties:
        AccessToken:
          type: string
        TokenType:
          type: string
        RefreshToken:
          type: string
        ExpiresIn:
          type: number
        IdToken:
          type: string
    OpenIdTokenRequest:
      type: object
      properties:
        code:
          type: string
        state:
          type: string